/** * combo控件 * @author xiao li * @return */function Bscombo(){	this.objName ="";	this.tag = true;	this.curEnterType =1 ;//1为树，2为搜索	this.currentPage =1;	this.pageCount =1;	this.searchStr ="";	this.searchURL ="";	this.treeURL="";	this.treeNodeClick=null;//节点文本单击事件	this.type ="0";//0显示树和搜索，1只显示树，2只显示搜索		this.comboCnl ="comboCnl";//combo容器ID	this.comboList = "bs_comboList";//combo下拉大列表（含底部状态栏）ID	this.comboListSearchId="bs_comboList_search";//combo搜索子项列表ID	this.comboListTreeId ="bs_comboList_tree";//combo树列表ID	this.comboTxtCnlId="bs_combo";//文本框容器的ID	this.comboTxtId="bs_comboTxt";//文本框的ID	this.comboArrow="combo_arrow";//下拉键img的ID	this.comboArrowImg="combo_select.gif";//下拉键img	this.comboArrowImg2="combo_select2.gif";//下拉键img	this.comboLoadCls ="combo_loading";//loading状态容器ID	this.comboBlur ="";//combo失去焦点时执行的代码	this.comboTxtValue =3;//1表示以编号为值，2表示以节点文本为值,3表示以编号+节点文本为值	this.comboName ="combo";//combo控件名	this.comboWidth =210;//combo宽	this.comboHeight =225;	this.comboNo =""; 	this.comboTxtBk="";//txt背景	this.comboReadOnly=false;	this.comboMaxLength="100";		this.currrent_Selected_Node;//当前选中节点	this.defaultValue ="";//combo框默认值		this.startSearchIndex =0;//文本长度大于等于0时，开始搜索	this.imgPath ="images/combo/";		this.bColorAfter ="blue";//下拉列表选中后子项背景颜色	this.colorAfter ="#FFF";//下拉列表选中后子项文本颜色	this.bColorBefore ="#FFF";//下拉列表选中前子项背景颜色	this.colorBefore = "#000";//下拉列表选中前子项文本颜色	this.listTxtOverColor ="#ccc";//鼠标移上下拉列表中列表项时，列表项的背景颜色	this.listTxtBkColor ="#FFF";//下拉列表背景颜色	this.listAddWidth =0;//下拉列表要增加多少宽度	this.listAddTop=0;//下拉列表top要偏移多少	this.listAddLeft=0;//下拉列表left要偏移多少		this.updown = true;	this.nodeCanClk =true; //非叶节点单击能否给文本框赋值	this.nodeTxtType =2;//0只显示编码,1只显示文本，2显示节点编码和文本	this.z_index ="300";	this.Required = false;		this.defaultSeaValue=-1;//默认搜索后，文本得到的值		this.txtcss="";	this.submitData={};//必须提交的数据	this.canrequst=false;	this.cmbOldValue="";	this.frist=true;	this.resize=false;//是否开始改变大小		this.beforeExeFunc=null;//在执行搜索前，要执行的函数(无参数的函数)	this.beforeSetValue=null;//在赋值前，要执行的函数(无参数的函数)	this.afterExeFunc=null;	this.afterSetValue=null;		this.haspage=false;//是否有分页	this.searchMode="1";//0为定位查找，1为模糊查询	this.valuetoTxt=false;//定位查找后，记录是否上文本框}//初始化和创建combo控件Bscombo.prototype.init = function(sets){	var tmpThis= this;	if(sets){		for(var s in sets){			if(typeof(this[s])!="undefined"){				this[s]=sets[s];			}		}		if(typeof(sets["imgPath"])!='undefined'){			this.imgPath = sets["imgPath"];			if(this.imgPath.indexOf("/")!=this.imgPath.length){				this.imgPath=this.imgPath+"/";			}		}		if(typeof(sets["comboNo"])!="undefined"){			this.comboNo=sets["comboNo"];			this.comboListId = this.comboListId+sets["comboNo"];			this.comboTxtCnlId = this.comboTxtCnlId+sets["comboNo"];			this.comboTxtId = this.comboTxtId+sets["comboNo"];			this.comboArrow = this.comboArrow+sets["comboNo"];			this.comboLoadCls = this.comboLoadCls+sets["comboNo"];			this.comboList = this.comboList+sets["comboNo"];			this.comboListSearchId = this.comboListSearchId+sets["comboNo"];			this.comboListTreeId = this.comboListTreeId+sets["comboNo"];		}	}	var defaultValueTmp=$("#"+this.comboCnl).attr("defaultValue");	if(defaultValueTmp){		this.defaultValue=defaultValueTmp;	}	this.tag=false;	var comboary = [];	var comboary2 =[];	comboary.push("<div style='height:16px;width:"+this.comboWidth+"'>");	comboary.push("<div id=\""+this.comboTxtCnlId+"\" tabindex='1000' style=\"background:url('"+this.imgPath+this.comboTxtBk+"') #fff;");	comboary.push("border:solid 1px #7f9db9;width:"+this.comboWidth+"px;height:21px;font-size:11px;"+this.txtcss);	comboary.push("overflow: hidden;position: relative;\">");	comboary.push("<input id=\""+this.comboTxtId+"\" name=\""+this.comboName+"\" type=\"text\" maxlength=\""+this.comboMaxLength+"\" ");	comboary.push("value=\""+this.defaultValue+"\" ");	comboary.push("style=\"border-width: 0px;width: "+(this.comboWidth-22)+"px;font-size: 9pt;background:transparent;");	this.cmbOldValue=this.defaultValue;	if(this.comboReadOnly){		comboary.push("background:#ccc;");	}	comboary.push(";margin-top:1px;margin-bottom:1px;position: absolute;\" autocomplete=\"off\" ");	if(this.comboReadOnly)		comboary.push(" readonly=\""+this.comboReadOnly+"\"");	comboary.push(" onblur=\""+this.comboBlur+"\"/>");	comboary.push("<a href='javascript:void(0)'><img src=\""+this.imgPath+this.comboArrowImg+"\" align='absmiddle' ");	comboary.push("id=\""+this.comboArrow+"\" onmouseover=\"this.src='"+this.imgPath+this.comboArrowImg2+"'\""); 	comboary.push("onmouseout=\"this.src='"+this.imgPath+this.comboArrowImg+"'\"");	comboary.push("style=\"position: absolute;width: 17px;height:19px;top:0;right:0px;\" tagindex='1001' border='0'/></a>");	if(this.Required){		comboary.push("<label style=\"color:red;position: absolute;height:19px;right:0px;\">*</label>");	}	comboary.push("</div>");	comboary.push("</div>");			if($("#"+this.comboList).size()==0){		comboary2.push("<iframe id=\""+this.comboList+"\" style=\"position:absolute;");		comboary2.push("top:0;right:0;width:"+(this.comboWidth+this.listAddWidth)+"px;height:"+this.comboHeight+"px;z-index:250;background:#FFFFFF;");		comboary2.push("display:none;filter:Alpha(opacity=100);-moz-opacity:1;\" frameborder='0'>"); 		comboary2.push("</iframe>");		comboary2.push("<div id=\""+this.comboListSearchId+"\" style=\"position: absolute;background:"+this.listTxtBkColor+";");		comboary2.push("z-index: "+this.z_index+";height:"+this.comboHeight+"px;width:"+(this.comboWidth-3+this.listAddWidth)+"px;font-size: 9pt;");		comboary2.push("border: solid 1px #7f9db9;display:none;text-align:left\" tabindex='1002'>");		comboary2.push("<div style=\"overflow:auto;height:"+(this.comboHeight-20)+"px;width:"+(this.comboWidth-3+this.listAddWidth)+"px;margin-right:1px;\" class=\"combolist\"></div>");		comboary2.push("<div style=\"height:18px;border-top:solid 1px #ccc;\">");		if(this.haspage){//需要分页时			comboary2.push("<div style=\"float: left;font-size:8pt;color:blue\">&nbsp;");			comboary2.push("<a href='javascript:void(0)' onclick='"+this.objName+".firstPage(event);' style='cursor:pointer'>首页</a> ");			comboary2.push("<a href='javascript:void(0)' onclick='"+this.objName+".upPage(event);' style='cursor:pointer'>上页</a> ");			comboary2.push("<a href='javascript:void(0)' onclick='"+this.objName+".nextPage(event);' style='cursor:pointer'>下页</a> ");			comboary2.push("<a href='javascript:void(0)' onclick='"+this.objName+".lastPage(event);' style='cursor:pointer'>末页</a>")			comboary2.push("</div>");		}		comboary2.push("<div style=\"float: left;\" class=\""+this.comboLoadCls+"\"><img src=\""+this.imgPath);		comboary2.push("progress.gif\" align=\"middle\"/> loading...</div>");				comboary2.push("<div style=\"float: right;margin-right:1px;\">");		comboary2.push("<span style='color:#7f9db9;font-size:9pt;cursor:pointer;' onclick=\""+this.objName+".clear(event);\">[清空]</span> <span style=\"color:#7f9db9;font-size:9pt;cursor:pointer;\">[关闭]</span></div></div>");		comboary2.push("</div>");		comboary2.push("	<div align='left' id=\""+this.comboListTreeId+"\" style=\"position: absolute;z-index: "+this.z_index+";background:"+this.listTxtBkColor+";");		comboary2.push("height:"+this.comboHeight+"px;width: "+(this.comboWidth-3+this.listAddWidth)+"px;font-size: 9pt;border: solid 1px #7f9db9;display:none\" tabindex='1003'>");		comboary2.push("<div style=\"overflow:auto;height:"+(this.comboHeight-22)+"px;width: "+(this.comboWidth-3+this.listAddWidth)+"px;margin-right:1px;\" class=\"combolist\"></div>");		comboary2.push("<div style=\"height:18px;border-top:solid 1px #ccc;\"><div style=\"float: left;\" class=\""+this.comboLoadCls);		comboary2.push("\"><img src=\""+this.imgPath+"progress.gif\" align=\"middle\"/> loading...</div>");		comboary2.push("<div style=\"float: right;margin-right:1px;\">");		comboary2.push("<span style='color:#7f9db9;font-size:9pt;cursor:pointer;' onclick=\""+this.objName+".clear(event);\">[清空]</span> <span style=\"color:#7f9db9;font-size:9pt;cursor:pointer;\">[关闭]</span></div></div>");		comboary2.push("</div>");		$(document.body).append(comboary2.join(''));	}	//comboary2.push("<div id='hidden_"+this.comboNo+"' style='display:none'></div>");	//alert(comboary.join(''));	document.getElementById(this.comboCnl).innerHTML=comboary.join('');				$(window).resize(function(){		if(!tmpThis.frist){			$("#"+tmpThis.comboTxtCnlId).css("position","relative");			$("#"+tmpThis.comboTxtCnlId).css("position","static");		 	tmpThis.showHide(false);		}	});		$("#"+this.comboTxtId).keydown(function(event){		tmpThis.keyDown(event);		if(event.keyCode==13 && tmpThis.currrent_Selected_Node){			var tmp ;			if(tmpThis.comboTxtValue==1){				tmp = $(tmpThis.currrent_Selected_Node).attr("no");			}else if(tmpThis.comboTxtValue==2){				tmp = $(tmpThis.currrent_Selected_Node).attr("txt");			}else {				tmp = $(tmpThis.currrent_Selected_Node).attr("no")+" "+$(tmpThis.currrent_Selected_Node).attr("txt");			}			tmpThis.tag = false;						if(tmpThis.beforeSetValue){				tmpThis.beforeSetValue($(tmpThis.currrent_Selected_Node).attr("no"),$(tmpThis.currrent_Selected_Node).attr("txt"),tmpThis.currrent_Selected_Node);			}						document.getElementById(tmpThis.comboTxtId).value=tmp;			if(tmpThis.afterSetValue){				tmpThis.afterSetValue($(tmpThis.currrent_Selected_Node).attr("no"),$(tmpThis.currrent_Selected_Node).attr("txt"),tmpThis.currrent_Selected_Node);				}			tmpThis.curEnterType =2;			tmpThis.showHide(false);			document.getElementById(tmpThis.comboTxtId).select();			document.getElementById(tmpThis.comboTxtId).focus();			document.getElementById(tmpThis.comboTxtId).focus();			$("input[type=submit]").blur();			tmpThis.tag = true;		}else if(event.ctrlKey && event.keyCode==77){			tmpThis.tag = true;			tmpThis.searchMode="1";			tmpThis.currentPage=1;			tmpThis.search(document.getElementById(tmpThis.comboTxtId).value);			}else if(event.keyCode==13){			tmpThis.valuetoTxt = true;			tmpThis.searchMode="0";			tmpThis.currentPage =-1;			//tmpThis.click(event,tmpThis);			tmpThis.tag =true;			tmpThis.search(document.getElementById(tmpThis.comboTxtId).value,false);			tmpThis.showHide(false);		}else if(event.keyCode!=40 && event.keyCode!=38){			tmpThis.tag = true;		}		//event.stopPropagation();	});	$("#"+this.comboTxtId).click(function(event){		event.stopPropagation();	});	//输入时进行模糊查询	if (window.navigator.userAgent.indexOf("MSIE")>=1){//浏览器为IE		document.getElementById(this.comboTxtId).onpropertychange = function(){			var txtval=document.getElementById(tmpThis.comboTxtId).value;			if(tmpThis.tag){				if(tmpThis.cmbOldValue!=txtval && tmpThis.canrequst){					if((tmpThis.type=="0" || tmpThis.type=="2")){					//alert(document.getElementById(tmpThis.comboTxtId).value);						tmpThis.searchMode="1";						tmpThis.currentPage=1;						tmpThis.search(document.getElementById(tmpThis.comboTxtId).value);						//tmpThis.tag=true;					}				}			}			tmpThis.cmbOldValue=txtval;		}	}else{		document.getElementById(this.comboTxtId).addEventListener("input",function(){			var txtval=document.getElementById(tmpThis.comboTxtId).value;			if(tmpThis.tag){				if(tmpThis.cmbOldValue!=txtval && tmpThis.canrequst){					if(tmpThis.type=="0" || tmpThis.type=="2"){						tmpThis.currentPage=1;						tmpThis.search(document.getElementById(tmpThis.comboTxtId).value);						//tmpThis.tag=true;					}				}			}			tmpThis.cmbOldValue=txtval;		},false);	}	$(document).click(function(){		tmpThis.showHide(false);	});	$("#"+this.comboArrow).click(function(event){		 if(bs____combos && typeof(bs____combos)!="undefined"){		 	for(var i=0;i<bs____combos.length;i++){		 		if(bs____combos[i]!=tmpThis.comboName){			 		var obj=eval(bs____combos[i]);			 		if(obj){			 			obj.showHide(false);			 		}		 		}		 	}		 }		 var obj2=document.getElementById("endDateLayer");		 if(obj2){		 	obj2.style.display="none";		 }		 tmpThis.valuetoTxt=false;		 tmpThis.click(event,tmpThis);	});	if(window.bs____combos){		window.bs____combos.push(this.objName);	}else{		window.bs____combos =[];		window.bs____combos.push(this.objName);	}	tmpThis.showHide(false);	this.canrequst=true;};//文本框和下拉按钮单击事件Bscombo.prototype.click=function(event,tmpThis){	tmpThis.searchMode="0";	tmpThis.currentPage =-1;	var search= document.getElementById(tmpThis.comboListSearchId);	var tree = document.getElementById(tmpThis.comboListTreeId)	if(tmpThis.type=="0"){		if(document.getElementById(tmpThis.comboTxtId).value.length>0){			if(search.style.display=="" || search.style.display=="block"){				tmpThis.showHide(false,tmpThis.curEnterType==2);			}else{				if(tmpThis.curEnterType==2){					if(tmpThis.tag){						tmpThis.search(document.getElementById(tmpThis.comboTxtId).value);					}else{						tmpThis.showHide(true,true);					}				}else{					tmpThis.tree();				}			}		}else{			if(tree.style.display=="" || tree.style.display=="block"){				tmpThis.showHide(false);			}else{				tmpThis.tree();			}		}	}else if(tmpThis.type=="2"){//只有搜索,精确查询		if(search.style.display=="" || search.style.display=="block"){			tmpThis.showHide(false);		}else{			tmpThis.search(document.getElementById(tmpThis.comboTxtId).value);		}	}else{		if(tree.style.display=="" || tree.style.display=="block"){			tmpThis.showHide(false);		}else{			tmpThis.tree();		}	}	event.stopPropagation();};//搜索列表//服务端返回数据规范：{rows:[{"no":"","name":""},{"no":"","name":""}],pagesize:10,total:0,curpage:1,pagecount:0}no在列表中值唯一Bscombo.prototype.search = function(searchStr,sorh){	if(searchStr.length>=this.startSearchIndex && this.tag){		var thisTmp = this;		this.frist=false;		this.curEnterType = 2;		this.searchStr = searchStr;				this.showHide(((typeof(sorh)=='undefined'||sorh==true)?true:false),true);		$("."+this.comboLoadCls).show();		var senddata ={"where":searchStr};		if(this.beforeExeFunc){			this.beforeExeFunc();		}		for(var tmp in this.submitData){			senddata[tmp] = this.submitData[tmp];		}		senddata["page"]=this.currentPage;		if(this.searchMode=="0"){//精确查询			senddata["mode"]="0";		}		$.ajax({			"type":"post",			"url":thisTmp.searchURL,			"dataType":"json",			"data":jQuery.param(senddata),			"success":function(json){				//var a="if";				var data = json["rows"];				var objSearch = document.getElementById(thisTmp.comboListSearchId);				var html = new Array();				var n=0,rownum=-1,tmp,foundRow;				if(json["pagecount"] && !isNaN(json["pagecount"])){					thisTmp.pageCount= parseInt(json["pagecount"]);				}				if(json["curpage"] && !isNaN(json["curpage"])){					thisTmp.currentPage = parseInt(json["curpage"]);				}				if(json["rownum"] && !isNaN(json["rownum"])){					rownum = parseInt(json["rownum"]);					foundRow=json[rownum-1];				}				for(var node=0;node<data.length;node++){					n++;					var tt=data[node];					for(var t in tt){						if(tt[t]){							var t2=tt[t].toString();							t2=t2.replace(/\"/g,"&quot;");							t2=t2.replace(/'/g,"&apos;");							t2=t2.replace(/\</g,"&lt;");							t2=t2.replace(/\n|\r|\t/g,"");							tt[t]=t2.replace(/\>/g,"&gt;");						}					}					if(typeof(tt.name)=="undefined" && typeof(tt.no)=="undefined") continue;					html.push("<div onmouseover=\"this.style.backgroundColor='"+thisTmp.listTxtOverColor+"'\" ");					html.push(" onmouseout=\""+thisTmp.objName+".nodeOutBySearch(this)\"");					html.push("onclick=\""+thisTmp.objName+"._nodeClickBySearch('"+ tt.no+"','"+tt.name+"',this)\" ");					html.push(" txt=\""+tt.name+"\" style='cursor:pointer;margin-left:2px;white-space:nowrap;word-break: break-all;' title='");					if(thisTmp.nodeTxtType==1){						html.push(tt.name);					}else{						html.push(tt.no+" "+tt.name);					}					html.push("'");					for(var t in tt){						html.push(" "+t+"=\""+tt[t]+"\"");					}					html.push(">");					if(thisTmp.nodeTxtType==0){						html.push(tt.no);					}else if(thisTmp.nodeTxtType==1){						html.push(tt.name);					}else if(thisTmp.nodeTxtType==2){						html.push(tt.no+" "+tt.name);					}					if(node==thisTmp.defaultSeaValue && document.activeElement.id!=thisTmp.comboTxtId){						if(comboTxtValue==1){							thisTmp.tag=false;							document.getElementById(thisTmp.comboTxtId).value=tt.no;							thisTmp.tag=true;						}else if(comboTxtValue==2){							thisTmp.tag=false;							document.getElementById(thisTmp.comboTxtId).value=tt.name;							thisTmp.tag=true;						}else{							thisTmp.tag=false;							document.getElementById(thisTmp.comboTxtId).value=tt.no+" "+tt.name;							thisTmp.tag=true;						}					}										html.push("</div>");				}				if(data.length>0){					objSearch.firstChild.innerHTML = html.join('');				}else{					objSearch.firstChild.innerHTML = "";//"<span style='background:yellow;color:red'> 没有找到数据！</span>";					if(thisTmp.defaultSeaValue>=0 && document.activeElement.id!=thisTmp.comboTxtId){						document.getElementById(thisTmp.comboTxtId).value="";					}				}				//alert(objSearch.firstChild.scrollHeight);				if(rownum>0){//要进行定位滚动条					objSearch.firstChild.scrollTop=	(rownum-1)/30*objSearch.firstChild.scrollHeight;					var objt=$(objSearch.firstChild).find("div").eq(rownum-1);					objt.css({"color":thisTmp.colorAfter,"background":thisTmp.bColorAfter});					thisTmp.currrent_Selected_Node=objt.get(0);					if(thisTmp.valuetoTxt){						var valuetmp="";						if(thisTmp.comboTxtValue==1){							valuetmp=foundRow.no;						}else if(thisTmp.comboTxtValue==2){							valuetmp=foundRow.name;						}else{							valuetmp=foundRow.no+" "+foundRow.name;						}						if(thisTmp.beforeSetValue){							thisTmp.beforeSetValue(foundRow.no,foundRow.name,thisTmp.currrent_Selected_Node);						}							document.getElementById(thisTmp.comboTxtId).value=valuetmp;						if(thisTmp.afterSetValue){							thisTmp.afterSetValue(foundRow.no,foundRow.name,thisTmp.currrent_Selected_Node);							}						thisTmp.curEnterType =2;						document.getElementById(thisTmp.comboTxtId).select();						document.getElementById(thisTmp.comboTxtId).focus();					}				}else{					thisTmp.currrent_Selected_Node =null;					objSearch.firstChild.scrollTop=0;				}				objSearch=null;				html=null;				$("."+thisTmp.comboLoadCls).hide();			},			"error":function(){				$("."+thisTmp.comboLoadCls).hide();				//alert('出错了!');			}		});	}else if(this.updown){		this.showHide(true,true);	}};//搜索列表mouseout时，改变搜索列表背景颜色Bscombo.prototype.nodeOutBySearch = function(obj){	if(this.currrent_Selected_Node==obj){		obj.style.backgroundColor=this.bColorAfter;	}else{		obj.style.backgroundColor=this.listTxtBkColor;	}};//点击'搜索下拉列表'节点处理Bscombo.prototype._nodeClickBySearch = function(no,value,obj){	if(this.currrent_Selected_Node){		this.currrent_Selected_Node.style.backgroundColor=this.bColorBefore;		this.currrent_Selected_Node.style.color=this.colorBefore;	}	obj.style.backgroundColor=this.bColorAfter;	obj.style.color=this.colorAfter;	this.currrent_Selected_Node = obj;	this.tag = false;	if(this.beforeSetValue){		this.beforeSetValue(no,value,obj);	}	var tmp ;	if(this.comboTxtValue==1){		tmp = no;	}else if(this.comboTxtValue==2){		tmp = value;	}else {		tmp = no+" "+value;	}	$("#"+this.comboTxtId).attr("no",no);	$("#"+this.comboTxtId+"_Hidden").attr("value",no);	document.getElementById(this.comboTxtId).value = tmp;	if(this.afterSetValue){		this.afterSetValue(no,value,obj);	}	this.curEnterType = 2;	$("#"+this.comboTxtId).select();	$("#"+this.comboTxtId).focus();	this.showHide(false);}//生成树/**追加节点,ajax请求服务端返回节点数据*参数:节点ID，节点值,级数,节点前图片节点,是否最后叶节点，是否最后根节点,事件对象。*服务端返回数据规范:{'节点唯一编号':{t:'节点文本',u:'节点唯一编号',j:1,i:1,l:1}}，*j:级数(值为数字),i是否有叶节点(1为有，0为无),l是否最后一个节点(1为是，0为否)*/Bscombo.prototype.tree = function(nodeID,nodeValue,js,imgObj,last,nodeTag,e){	var thisTmp = this;	var divnodeID=this.comboListTreeId+nodeID;	thisTmp.showHide(true,false);	var canCrea= true;	if(document.getElementById(divnodeID)==null){		canCrea=$("#"+this.comboListTreeId+" .combolist").html().length==0;	}	//nodeID为空时，生成一级节点	if((document.getElementById(divnodeID)==null || 			document.getElementById(divnodeID).innerHTML.length==0) && canCrea			){		//$("."+this.comboLoadCls).show();		var senddata ={"nodeID":nodeID,"nodeValue":nodeValue,"js":js};		if(this.beforeExeFunc){			this.beforeExeFunc();		}		for(var tmp in this.submitData){			senddata[tmp] = this.submitData[tmp];		}		$.ajax({			"type":"post",			"url":thisTmp.treeURL,			"dataType":"json",			"data":jQuery.param(senddata),			"success":function(data){				var index=0;				if((typeof(nodeID)=="undefined" && typeof(nodeValue)=="undefined") || (nodeID=="" && nodeValue=="")){//根节点					var obj = document.getElementById(thisTmp.comboListTreeId).firstChild;//树容器					var html = new Array();					var l=0;					var wh = (thisTmp.comboWidth-40)+"px";					for(var node in data){						index++;						var tObj = data[node];						for(var t in tObj){							if(tObj[t]){								var t2=tObj[t].toString();								t2=t2.replace(/\"/g,"&quot;");								t2=t2.replace(/'/g,"&apos;");								t2=t2.replace(/\</g,"&lt;");								t2=t2.replace(/\n|\r|\t/g,"");								tObj[t]=t2.replace(/\>/g,"&gt;");							}						}						var isleaf =tObj.i;						var isLast =(tObj.l==1?1:0);						var imgN ="";						var nodeNo= tObj.u+"tree_"+index;						var tmptext="";						if(thisTmp.nodeTxtType==0){							tmptext=(tObj.u);						}else if(thisTmp.nodeTxtType==1)							tmptext=(tObj.t);						else							tmptext=(tObj.u+" "+tObj.t);						if(isleaf==1){//有子节点							if(isLast==1){								imgN ="lp.gif";							} else{								imgN = "tp.gif";							}							html.push("<div _iL='1' style='white-space:nowrap;word-break:keep-all;'><img src='"+thisTmp.imgPath+imgN+"' align=absMiddle id='s' onclick=\""+thisTmp.objName+".tree('");							html.push(node);							html.push("','");							html.push(tObj.u);							html.push("',");							html.push(tObj.j);							html.push(",this,"+isLast+",'"+isLast+"',event);\"/><a href=\"javascript:void(0)\" style='text-decoration:none;white-space:nowrap;word-break:keep-all;word-wrap:normal' onclick=\"");//style='width:"+wh+"'							if(thisTmp.nodeCanClk){								html.push(thisTmp.objName+"._c('");								html.push(tObj.t+"','"+tObj.u+"'");								html.push(");");							}else{								html.push(thisTmp.objName+".tree('");								html.push(node);								html.push("','");								html.push(tObj.u);								html.push("',");								html.push(tObj.j);								html.push(",this.previousSibling,"+isLast+",'"+isLast+"',event)");							}							html.push("\" title='");							html.push(tmptext+"'>"+tmptext+"</a></div>");							html.push("<div style='display:none;white-space:nowrap;word-break:keep-all;' id='");							html.push(thisTmp.comboListTreeId+node);							html.push("'></div>");													}else{//无子节点							if(isLast==1){								imgN ="l.gif";							} else{								imgN = "t.gif";							}							html.push( "<img src='"+thisTmp.imgPath+imgN+"' align=absMiddle id='s'/><a style='text-decoration:none;white-space:nowrap;word-break:keep-all;word-wrap:normal' href=\"javascript:"+thisTmp.objName+"._c('");//style='width:"+wh+"'							html.push(tObj.t+"','"+tObj.u);							html.push("')\" title='");														html.push(tmptext+"'>"+tmptext+"</a><br/>");						}					}					obj.innerHTML = html.join('');					obj=null;					html =null;				}else{//一级以下节点生成					//this.treeData = eval('('+str+')');测试					//var obj = $("#"+nodeID+"");					var wh = thisTmp.comboWidth-40;					var p = imgObj.parentNode;					var tmp = p.nextSibling;//document.getElementById(nodeID);					var html = new Array();					var n =0;					var frontSplit = nodeTag.split(",");					var img = "i.gif";					if(last==1){						img ="w.gif";					} 					var i=1;					wh=wh-20*js;					for(var j=0;j<frontSplit.length;j++){						if(frontSplit[j]==1){							frontSplit[j] = "<img src='"+thisTmp.imgPath+"w.gif' align='absMiddle'/>";						}else{							frontSplit[j] = "<img src='"+thisTmp.imgPath+"i.gif' align='absMiddle'/>";						}					}					//alert(frontSplit[0]);					for(var node in data){						index++;						var tObj = data[node];						var isleaf =tObj.i;						var isLast =(tObj.l==1?1:0);						var tag = "";						var tmptext="";						if(thisTmp.nodeTxtType==0){							tmptext=(tObj.u);						}else if(thisTmp.nodeTxtType==1)							tmptext=(tObj.t);						else							tmptext=(tObj.u+" "+tObj.t);						if(isleaf==1){//有子节点							if(isLast==1){								imgN ="lp.gif";							} else{								imgN = "tp.gif";							}							tag = nodeTag+","+isLast;							html.push("<div _iL='1' style='white-space:nowrap;word-break:keep-all;'>");							html.push(frontSplit.join(''));							html.push("<img src='"+thisTmp.imgPath+imgN+"' align=absMiddle id='s' onclick=\""+thisTmp.objName+".tree('");							html.push( node);							html.push("','");							html.push(tObj.u);							html.push("',");							html.push(tObj.j);							html.push(",this,"+isLast+",'"+tag+"',event)\"/><a href=\"javascript:void(0)\" style='text-decoration:none;white-space:nowrap;word-break:keep-all;word-wrap:normal' onclick=\"");//style='width:"+wh.toString()+"px'							if(thisTmp.nodeCanClk){								html.push(thisTmp.objName+"._c('");								html.push(tObj.t+"','"+tObj.u+"')");							}else{								html.push(thisTmp.objName+".tree('");								html.push(node);								html.push("','");								html.push(tObj.u);								html.push("',");								html.push(tObj.j);								html.push(",this.previousSibling,"+isLast+",'"+tag+"',event)");							}							html.push("\" title='");															html.push(tmptext+"'>"+tmptext+"</a></div>");							html.push("<div style='white-space:nowrap;word-break:keep-all;display:none' id='");							html.push( thisTmp.comboListTreeId+node);							html.push("'></div>");							//obj.append(html.join(''));						}else{//无子节点							if(isLast==1){								imgN ="l.gif";							} else{								imgN = "t.gif";							}							html.push( frontSplit.join(''));							html.push( "<img src='"+thisTmp.imgPath+imgN+"' align=absMiddle id='s'/><a style='text-decoration:none;white-space:nowrap;word-break:keep-all;word-wrap:normal' href=\"javascript:"+thisTmp.objName+"._c('");//style='width:"+wh.toString()+"px'							html.push(tObj.t+"','"+tObj.u);							html.push("')\" title='");							html.push(tmptext+"'>"+tmptext+"</a><br/>");						}					}					tmp.innerHTML = html.join('');					html=null					tmp =null;				}				thisTmp._eS(imgObj);				if(window.event){					window.event.cancelBubble=true;				}				$("."+thisTmp.comboLoadCls).hide();			},			"error":function(data){				$("."+thisTmp.comboLoadCls).hide();				//alert("出错了!");			}		});	}else{//展开或隐藏树		this._eS(imgObj);	}	if(typeof(e)!="undefined"){	e.cancelBubble=true;	}};//展开或隐藏树Bscombo.prototype._eS=function(obj){	if(obj){		var parent = obj.parentNode;		if(parent){			if(parent.getAttribute("_iL")=="1"){//有子节点		//	alert(parent.getAttribute("_iL"))				var pc = parent.nextSibling;				var src=obj.src;				//alert(pc.className);				if(pc.style.display=="none"){					//pc.style.display ="block";					$(pc).slideDown("fast");					if(/.*\/tp.gif$/gi.test(src)){//非最后一个的级节点缩背景						obj.src=this.imgPath+"tm.gif";//非最后一个的级节点展开背景					}else if(/.*\/lp.gif$/gi.test(src)){//最后一个的级节点缩背景						obj.src=this.imgPath+"lm.gif";//最后一个的级节点展开背景					}					}else{					pc.style.display ="none";					//$(pc).slideUp("fast");					if(/.*\/tm.gif$/gi.test(src)){						obj.src=this.imgPath+"tp.gif";					}else if(/.*\/lm.gif$/gi.test(src)){//最后一个的级节点展开背景						obj.src=this.imgPath+"lp.gif";//最后一个的级节点缩背景					}						}			}		}		}	};//树节点点击处理Bscombo.prototype._c=function(value,no){	//alert(this.comboTxtValue);	var tmp ;	if(this.comboTxtValue==1){		tmp = no;	}else if(this.comboTxtValue==2){		tmp = value;	}else {		tmp = no+" "+value;	}	this.tag = false;	if(this.beforeSetValue){		this.beforeSetValue(no,value);	}	$("#"+this.comboTxtId).attr("no",no);	document.getElementById(this.comboTxtId).value=tmp;	if(this.afterSetValue){		this.afterSetValue(no,value);	}	this.curEnterType = 1;	$("#"+this.comboTxtId+"_Hidden").attr("value",tmp);	this.showHide(false);	document.getElementById(this.comboTxtId).select();	document.getElementById(this.comboTxtId).focus();	this.tag = true;}	//显示和隐藏控制Bscombo.prototype.showHide = function(hors,isSearch,event){	var event=arguments[2] || window.event;	if(this.type =="1"){ 		isSearch = false; 	}else if(this.type=="2"){ 		isSearch =true; 	}	var obj = document.getElementById(this.comboListSearchId);	var objTree = document.getElementById(this.comboListTreeId);	var objBk = document.getElementById(this.comboList);	if(isSearch){		if(objTree){			objTree.style.display="none";		}	}else{		obj.style.display ="none";		obj = objTree;	} 	if(hors){ 		//var bottomedge = document.body.clientHeight-event.clientY;   		if(this.frist && (this.type=="0" || this.type==2)){			this.tag =true;			this.currentPage =1;			this.search("");		} 		var top = getTop(document.getElementById(this.comboTxtCnlId))+document.getElementById(this.comboTxtCnlId).offsetHeight;		var left = getLeft(document.getElementById(this.comboTxtCnlId));		top+=this.listAddTop;		left+=this.listAddLeft;		if((this.comboHeight+top)>document.body.offsetHeight){			var ttop = top-document.getElementById(this.comboTxtCnlId).offsetHeight-this.comboHeight;			if(ttop>0){				top = ttop;			}		}		obj.style.top = top.toString()+"px";		obj.style.left = left.toString()+"px"; 		obj.style.display =""; 		//$(obj).slideDown("fast");		objBk.style.top = top.toString()+"px"; 		objBk.style.left = left.toString()+"px"; 		objBk.style.display ="";			}else{		document.getElementById(this.comboListSearchId).style.display ="none";		document.getElementById(this.comboListTreeId).style.display ="none";		objBk.style.display ="none";	}		//document.getElementById(this.comboTxtId).select();};Bscombo.prototype.keyDown = function(event){	this.updown = true;	this.tag = false;	var objsearch=document.getElementById(this.comboListSearchId).firstChild;	var comboList = document.getElementById(this.comboListSearchId)//	document.getElementById("test").innerHTML ="["+comboList.style.display+"]";//	if(this.currrent_Selected_Node){//		document.getElementById("test").innerHTML ="<br/>"+document.getElementById("test").innerHTML+this.currrent_Selected_Node.innerHTML;//	}	//objsearch.style.display=="" || objsearch.style.display=="block"	if(this.curEnterType==2){	var valueObj = document.getElementById(this.comboTxtId);//文本赋值对象	var listContent = objsearch;//列表容器	if(event.keyCode==40){//向后移动		if(this.currrent_Selected_Node && this.currrent_Selected_Node.nodeName=="DIV"){			var t1=this.currrent_Selected_Node.nextSibling;			if(t1){				var t2 = t1//.nextSibling;				if(t2){					this.currrent_Selected_Node.style.backgroundColor=this.bColorBefore;					this.currrent_Selected_Node.style.color=this.colorBefore;					this.currrent_Selected_Node = t2;					t2.style.backgroundColor=this.bColorAfter;					t2.style.color=this.colorAfter;					if(comboList.style.display=="none"){						this.updown = false;						var tmp ;						if(this.comboTxtValue==1){							tmp = $(t2).attr("no");						}else if(this.comboTxtValue==2){							tmp = t2.innerHTML;						}else {							tmp = $(t2).attr("no")+" "+$(t2).attr("txt");						}						if(this.beforeSetValue){							this.beforeSetValue($(t2).attr("no"),$(t2).attr("txt"),this.currrent_Selected_Node);						}						valueObj.value=tmp;							if(this.afterSetValue){							this.afterSetValue($(t2).attr("no"),$(t2).attr("txt"),this.currrent_Selected_Node);						}						valueObj.select();					}					if(t2.offsetTop+t2.offsetHeight>listContent.offsetHeight){						//listContent.scrollTop=(t2.offsetTop-t2.offsetHeight);						listContent.scrollTop=(t2.offsetTop+t2.offsetHeight-listContent.offsetHeight);					}else{						listContent.scrollTop=0;					}				}			}		}else{			var t1 =listContent.firstChild;			if(t1){				this.currrent_Selected_Node = t1;				t1.style.backgroundColor=this.bColorAfter;				t1.style.color=this.colorAfter;				listContent.scrollTop=0;				if(comboList.style.display=="none"){					this.updown = false;					var tmp ;					if(this.comboTxtValue==1){						tmp = $(t1).attr("no");					}else if(this.comboTxtValue==2){						tmp = t1.innerHTML;					}else {						tmp = $(t1).attr("no")+" "+$(t1).attr("txt");					}					if(this.beforeSetValue){							this.beforeSetValue($(t2).attr("no"),$(t2).attr("txt"));					}					valueObj.value=tmp;						if(this.afterSetValue){							this.afterSetValue($(t2).attr("no"),$(t2).attr("txt"));					}					valueObj.select();				}			}		}	}else if(event.keyCode==38) {//向前移动		if(this.currrent_Selected_Node && this.currrent_Selected_Node.nodeName=="DIV"){			var t1=this.currrent_Selected_Node.previousSibling;				if(t1){					var t2 = t1;//.previousSibling;					if(t2){						this.currrent_Selected_Node.style.backgroundColor=this.bColorBefore;						this.currrent_Selected_Node.style.color=this.colorBefore;						this.currrent_Selected_Node = t2;						t2.style.backgroundColor=this.bColorAfter;						t2.style.color=this.colorAfter;												if(t2.offsetTop+t2.offsetHeight>=listContent.scrollTop){										//listContent.scrollTop=(t2.offsetTop-t2.offsetHeight);							listContent.scrollTop=(t2.offsetTop+t2.offsetHeight-listContent.offsetHeight);						}						if(comboList.style.display=="none"){							this.updown = false;							var tmp ;							if(this.comboTxtValue==1){								tmp = $(t2).attr("no");							}else if(this.comboTxtValue==2){								tmp = t2.innerHTML;							}else {								tmp = $(t2).attr("no")+" "+$(t2).attr("txt");							}							if(this.beforeSetValue){								this.beforeSetValue($(t2).attr("no"),$(t2).attr("txt"));							}							valueObj.value=tmp;								if(this.afterSetValue){								this.afterSetValue($(t2).attr("no"),$(t2).attr("txt"));							}							valueObj.select();						}					}				}		}else{			var t1 =listContent.lastChild;			if(t1 && t1.previousSibling){				t1 = t1.previousSibling;				this.currrent_Selected_Node = t1;				t1.style.backgroundColor=this.bColorAfter;				t1.style.color=this.colorAfter;				listContent.scrollTop=listContent.scrollHeight;				if(comboList.style.display=="none"){					this.updown = false;					var tmp ;					if(this.comboTxtValue==1){						tmp = $(t1).attr("no");					}else if(this.comboTxtValue==2){						tmp = t1.innerHTML;					}else {						tmp = t1.innerHTML;						//tmp = $(t1).attr("no")+" "+t1.innerHTML;					}					if(this.beforeSetValue){						this.beforeSetValue($(t2).attr("no"),$(t2).attr("txt"));					}					valueObj.value=tmp;						if(this.afterSetValue){						this.afterSetValue($(t2).attr("no"),$(t2).attr("txt"));					}					valueObj.select();				}			}		}	}	valueObj.focus();	return false;		}};//清空Bscombo.prototype.clear=function(event){	if (event && event.stopPropagation)        event.stopPropagation();    else if(window.event)        window.event.cancelBubble = true;	this.tag=false;	$("#"+this.comboTxtId).val('');	this.tag=true;}Bscombo.prototype.clearTree=function(){	$("#"+this.comboListTreeId+" .combolist").html("");}Bscombo.prototype.clearSearch=function(){	$("#"+this.comboListSearchId+" .combolist").html("");}Bscombo.prototype.clearAll=function(){	this.clear();	this.clearTree();	this.clearSearch();}Bscombo.prototype.upPage=function(event){	if(this.currentPage<1) this.currentPage=2;	this.turnPage(this.currentPage-1,event);}Bscombo.prototype.nextPage=function(event){	if(this.currentPage<1) this.currentPage=1;	this.turnPage(this.currentPage+1,event);}Bscombo.prototype.firstPage=function(event){	this.turnPage(1,event);}Bscombo.prototype.lastPage=function(event){	this.turnPage(this.pageCount,event);}//分页跳转Bscombo.prototype.turnPage=function(page,event){	if (event && event.stopPropagation)        event.stopPropagation();    else        window.event.cancelBubble = true;    this.tag = true;	this.currentPage=page;	this.search($("#"+this.comboTxtId).val(),true);}//追加样式function appendStyle(styleStr){ 	if(document.all){ 		if(typeof(window.style)!='undefined'){			window.style = window.style+styleStr		}else{			window.style=styleStr;		} 		document.createStyleSheet("javascript:style"); 	}else{ 		var style = document.createElement('style'); 		style.type = 'text/css'; 		style.innerHTML=styleStr; 		document.getElementsByTagName('HEAD').item(0).appendChild(style); 	} } //取对象top绝对位置function getTop(e){ 	if(typeof(e)!="undefined"){		if(e.getBoundingClientRect)			return e.getBoundingClientRect().top+getScrollY(document.body);		else{			var offset=e.offsetTop; 			if(e.offsetParent!=null) offset+=getTop(e.offsetParent); 			return offset; 		}	}	else{		return 0;	}} //取对象left绝对位置function getLeft(e){ 	if(typeof(e)!="undefined"){		if(e.getBoundingClientRect)			return e.getBoundingClientRect().left+getScrollX(document.body);		else{			var offset=e.offsetLeft; 			if(e.offsetParent!=null) offset+=getLeft(e.offsetParent); 			return offset; 		}	}else{		return 0;	}}function getScrollY(obj){	if(obj){			var y =0;			while(obj){				 y += Int(obj.pageYOffset || obj.scrollTop);				 obj = obj.parentNode || null;			}			return y;		}else{			return Int(window.pageYOffset || (this.db? this.db.scrollTop : 0));		}}function getScrollX(obj){	if(obj){		var x =0;		while(obj){			 x += Int(obj.pageXOffset||obj.scrollLeft);	 			 obj = obj.parentNode || null;		}		return x;	}	else{		return Int(window.pageXOffset || (this.db? this.db.scrollLeft : 0));	}}function Int(math, deault){	var t=0;	if(typeof(deault)==this.t_u || isNaN(deault)) deault =0;	return !isNaN(t = parseInt(math))? t : deault;}